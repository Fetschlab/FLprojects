import numpy as np
import matplotlib.pyplot as plt

class Neuron:
    def __init__(self, spiketimes, sr, amps=None, wfs=None, 
                 template=None, temp_amp=np.nan, gridxy = np.nan*np.ones(2,),
            sessionID='', clus_grp=0, area='', channel=0, depth=np.nan, electrode=''):
         # change some to kwargs?
        self.spiketimes = np.array(spiketimes)
        self.sr = sr
        self.amps = amps
        self.wfs = wfs
        self.template = template
        self.temp_amp = temp_amp
        self.gridxy = gridxy
        self.sessionID = sessionID
        self.clus_grp = clus_grp
        self.area = area
        self.channel = channel
        self.depth = depth
        self.electrode = electrode

    def __str__(self):
        return f'{type} {self.area} unit, {len(self.spiketimes)} spikes, session {sessionID}, \
            ch{self.channel} at {self.depth} depth, using {self.electrode}'

    #def isi(self, binsize=0.01, max=0.2, plot=False):

    #def corr(self, binsize=0.01, max=0.2, plot=False):

    #def ifr(self, binsize=0.1, plot=False)

    #def plot_waveforms(self):
        
    #def wf_width(self):
    
    #def summary(self, binsize=0.01, max=0.2, plot=False):
    #  isi, corr, ifr, wf_width 2x2 subplots


if __name__ == '__main__':
    """
    do some diagnostics
    generate a neuron with poisson firing, and some modulation
    """
    neuron = Neuron()